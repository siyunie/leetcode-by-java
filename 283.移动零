/*
给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。

示例:

输入: [0,1,0,3,12]
输出: [1,3,12,0,0]
说明:

必须在原数组上操作，不能拷贝额外的数组。
尽量减少操作次数。

*/

/*
方法一：暴力法
*/

class Solution {
    public void moveZeroes(int[] nums) {
        int count = 0;
        for(int i = 0;i < nums.length; i++){
            if(nums[i] == 0){
                count++;
                for(int j = i + 1; j < nums.length; j++){
                    if(nums[j] != 0){
                        nums[i] = nums[j];
                        nums[j] = 0;
                        count--;
                        break;
                    }
                }
            }
        }
    }
}

/*
方法二：每个非0数需要移动的个数就是这个数前面0的个数，然后将0移动到最后即可
*/

class Solution {
    public void moveZeroes(int[] nums) {
        int count = 0;
        for(int i = 0; i < nums.length; i++){
            if(nums[i] == 0){
                count++;
            }else{
                nums[i - count] = nums[i];
            }
        }
        for(int i = nums.length - count; i<nums.length; i++){
            nums[i] = 0;
        }
    }
}
