/*
给定一个正整数 n，生成一个包含 1 到 n2 所有元素，且元素按顺时针顺序螺旋排列的正方形矩阵。

示例:

输入: 3
输出:
[
 [ 1, 2, 3 ],
 [ 8, 9, 4 ],
 [ 7, 6, 5 ]
]

*/

/*
方法一:
先创建一个空矩阵,然后填充
1. 初始化四边的值left = 0, right = n - 1, top = 0, bottom = n - 1
2. 先从左往右,填完,top++,再从上往下,填完right--,再从右往左,填完bottom--,再从下往上,填完left++
3. 循环直到填充的数>n*n为止




class Solution {
    public int[][] generateMatrix(int n) {
        int left = 0, right = n - 1, top = 0, bottom = n - 1;
        int cur = 1;
        int[][] res = new int[n][n];
        while(cur <= n*n){
            for(int i = left; i <= right; i++){
                res[left][i] = cur;
                cur++;
            }
            top++;
            for(int i = top; i <= bottom; i++){
                res[i][right] = cur;
                cur++;
            }
            right--;
            for(int i = right; i >= left; i--){
                res[bottom][i] = cur;
                cur++;
            }
            bottom--;
            for(int i = bottom; i >= top; i--){
                res[i][left] = cur;
                cur++;
            }
            left++;
        }
        return res;
    }
}
