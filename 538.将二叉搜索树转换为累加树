/*
给定一个二叉搜索树（Binary Search Tree），把它转换成为累加树（Greater Tree)，使得每个节点的值是原来的节点值加上所有大于它的节点值之和。

例如：

输入: 二叉搜索树:
              5
            /   \
           2     13

输出: 转换为累加树:
             18
            /   \
          20     13
          
*/

/*
方法一:遍历顺序右根左,因为二叉搜索树的节点值右>根>左
*/

class Solution {
    int temp = 0;
    public TreeNode convertBST(TreeNode root) {
        helper(root);
        return root;
    }

    public TreeNode helper(TreeNode root){
        if(root == null){
            return null;
        }
        helper(root.right);
        root.val += temp;
        temp = root.val;
        helper(root.left);
        return root;
    }
}
