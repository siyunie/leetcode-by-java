/*

实现 int sqrt(int x) 函数。

计算并返回 x 的平方根，其中 x 是非负整数。

由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。

示例 1:

输入: 4
输出: 2
示例 2:

输入: 8
输出: 2
说明: 8 的平方根是 2.82842..., 
     由于返回类型是整数，小数部分将被舍去。

*/

/*
方法一:二分法
因为mid*mid如果大于x一定不为结果,但是小于x时无法确定是否为结果,所以判断mid*mid > x 向右收缩right = mid - 1
因此mid需要用右中位数 即 (left + right + 1) >>> 1
一开始使用int型发现结果溢出,因为mid*mid会超过2的31次方-1 的范围
所以使用long型 最后结果再强转成int型即可
right = x/2 +1  这个+1是为了满足1这个数的平方根为自身
同理 left = 0 是为了满足 x = 0 的情形

*/


class Solution {
    public int mySqrt(int x) {
        long left = 0;
        long right = x/2 + 1;
        while(left < right){
            long mid = (left + right + 1) >>> 1;
            if(mid * mid > x){
                right = mid - 1;
            }else{
                left = mid;
            }
        }
        return (int)left;
    }
}
