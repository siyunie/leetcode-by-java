/*
给定一个单词列表和两个单词 word1 和 word2，返回列表中这两个单词之间的最短距离。

示例:
假设 words = ["practice", "makes", "perfect", "coding", "makes"]

输入: word1 = “coding”, word2 = “practice”
输出: 3
输入: word1 = "makes", word2 = "coding"
输出: 1
注意:
你可以假设 word1 不等于 word2, 并且 word1 和 word2 都在列表里。

*/

/*
方法一:遍历
一遍遍历,分别记录words1和words2可能的位置,每次位置更新就计算一次距离并于之前的最小距离比较

*/

class Solution {
    public int shortestDistance(String[] words, String word1, String word2) {
        int left = -1;
        int right = -1;
        int minDistance = words.length;
        for(int i = 0; i < words.length; i++){
            if(words[i].equals(word1)){
                left = i;
                if(left >= 0 && right >= 0){
                    minDistance = Math.min(minDistance, Math.abs(right - left));
                }
            }else if(words[i].equals(word2)){
                right = i;
                if(left >= 0 && right >= 0){
                    minDistance = Math.min(minDistance, Math.abs(right - left));
                }
            }
        }
        return minDistance;
    }
}
