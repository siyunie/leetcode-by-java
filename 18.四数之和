/*
给定一个包含 n 个整数的数组 nums 和一个目标值 target，判断 nums 中是否存在四个元素 a，b，c 和 d ，使得 a + b + c + d 的值与 target 相等？找出所有满足条件且不重复的四元组。

注意：

答案中不可以包含重复的四元组。

示例：

给定数组 nums = [1, 0, -1, 0, -2, 2]，和 target = 0。

满足要求的四元组集合为：
[
  [-1,  0, 0, 1],
  [-2, -1, 1, 2],
  [-2,  0, 0, 2]
]

*/

/*
方法一:三指针
在双指针外再加一层循环
优化判断,如果和之前的数相同则跳过.如果包含此数已经不可能取到target则跳过

*/

class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> resLists = new ArrayList<List<Integer>>();
        Arrays.sort(nums);
		int len = nums.length;
		if (len == 4) {
            if(nums[0]+nums[1]+nums[2]+nums[3] == target){
                resLists.add(Arrays.asList(nums[0],nums[1],nums[2],nums[3]));
			    return resLists;
            }else{
                return resLists;
            }
		}
		for (int i = 0; i < len-3; i++) {
			if (i > 0 && nums[i] == nums[i-1]) {
				continue;
			}
			if ((nums[i] + nums[i+1] + nums[i+2] + nums[i+3]) > target) {
				break;
			}
			if ((nums[i] + nums[len-1] + nums[len-2] + nums[len-3]) < target) {
				continue;
			}
			for (int j = len-1; j > i ; j--) {
				if (j < len-1 && nums[j] == nums[j+1]) {
					continue;
				}
				int l = i+1;
				int r = j-1;
				while (l < r && r > i && l < j) {
					int sum = nums[i] + nums[j] + nums[r] + nums[l];
					if (sum > target) {
						r--;
					}else if (sum < target) {
						l++;
					}else {
						resLists.add(Arrays.asList(nums[i],nums[l],nums[r],nums[j]));
						while (nums[r] == nums[r-1] && l < r) {
							r--;
						}
						while (nums[l] == nums[l+1] && l < r) {
							l++;
						}
						r--;
						l++;
					}
					
				}
			}
		}
        return resLists;
    }
}
