/*
给定一个整数，编写一个函数来判断它是否是 2 的幂次方。

示例 1:

输入: 1
输出: true
解释: 20 = 1
示例 2:

输入: 16
输出: true
解释: 24 = 16
示例 3:

输入: 218
输出: false

*/

/*
方法一:递归

*/

class Solution {
    public boolean isPowerOfTwo(int n) {
        if(n <= 0){
            return false;
        }
        if(n == 1){
            return true;
        }
        while(n % 2 != 0){
            return false;
        }
        return isPowerOfTwo(n/2);
    }
}

/*
方法二:位运算
2的幂次方一定满足 n & n - 1 == 0
因为2的幂次方 n 一定是最高位为1,其余位为0的数
所以n - 1一定是最高位为0,其余位为1的数
所以n & n - 1 == 0
再加上n > 0的判断即可判断n是否是2的幂次方

*/

class Solution {
    public boolean isPowerOfTwo(int n) {
        return (n > 0) && ((n& (n - 1)) == 0);
    }
}
