/*
给定一个二叉树，原地将它展开为链表。

例如，给定二叉树

    1
   / \
  2   5
 / \   \
3   4   6
将其展开为：

1
 \
  2
   \
    3
     \
      4
       \
        5
         \
          6

*/

/*
方法一：发现展开是按前序遍历展开的
类似于莫里斯遍历得到中序遍历线索二叉树（莫斯利遍历为中序，这里为前序）
如果root有左子树，则把右子树接到左子树的最右，然后将左子树变成root的右子树，循环做，直到最后一个节点，构建前序遍历线索二叉树
*/

class Solution {
    public void flatten(TreeNode root) {
        if(root == null){
            return;
        }
        while(root != null){
            if(root.left == null){
                root = root.right;
            }else{
                TreeNode rright = root.left;
                while(rright.right != null){
                    rright = rright.right;
                }
                rright.right = root.right;
                root.right = root.left;
                root.left = null;
                root = root.right;
            }
        }
    }
}
