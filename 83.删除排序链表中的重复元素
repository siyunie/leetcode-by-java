/*
给定一个排序链表，删除所有重复的元素，使得每个元素只出现一次。

示例 1:

输入: 1->1->2
输出: 1->2
示例 2:

输入: 1->1->2->3->3
输出: 1->2->3

*/

/*
方法一:递归
终止条件:当只剩一个节点,或者无节点
返回值:返回处理好的节点的头节点
本次递归做什么:将本次head节点接到处理好的节点前,并且比较head节点和处理好的节点的值是否相等,相等则说明重复,则取处理好的节点作为新的头节点
否则head节点为头节点

*/

class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head == null || head.next == null){
            return head;
        }
        head.next = deleteDuplicates(head.next);
        if(head.val == head.next.val){
            return head.next;
        }
        return head;
    }
}
