/*
给定一个字符串数组，将字母异位词组合在一起。字母异位词指字母相同，但排列不同的字符串。

示例:

输入: ["eat", "tea", "tan", "ate", "nat", "bat"],
输出:
[
  ["ate","eat","tea"],
  ["nat","tan"],
  ["bat"]
]
说明：

所有输入均为小写字母。
不考虑答案输出的顺序。

*/

/*
方法一：利用hashmap
利用hashmap保存，key为str按字母顺序排序后值，这样异位词的key都是同一个，value为string未排序前的值组成的list
*/

class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        HashMap<String,ArrayList<String>> hash=new HashMap<>();
        for(int i=0;i<strs.length;i++){
            char[] arr=strs[i].toCharArray();
            Arrays.sort(arr);
            String temp=String.valueOf(arr);
            if(hash.containsKey(temp)){
                hash.get(temp).add(strs[i]);
            }else{
                ArrayList<String> list=new ArrayList<>();
                list.add(strs[i]);
                hash.put(temp,list);
            }
        }
        return new ArrayList<List<String>>(hash.values());
    }
}

//

class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        Map<String, List<String>> map = new HashMap<>();
        for(String str: strs){
            char[] cha = str.toCharArray();
            Arrays.sort(cha);
            String sortedStr = String.valueOf(cha);
            List<String> list = map.getOrDefault(sortedStr, new ArrayList<String>());
            list.add(str);
            map.put(sortedStr, list);
        }
        return new ArrayList<>(map.values());
    }
}
