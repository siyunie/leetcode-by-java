/*
在二维平面上计算出两个由直线构成的矩形重叠后形成的总面积。

每个矩形由其左下顶点和右上顶点坐标表示，如图所示。



示例:

输入: -3, 0, 3, 4, 0, -1, 9, 2
输出: 45
说明: 假设矩形面积不会超出 int 的范围。

*/

/*
方法一:数学法
判断两个矩形是否相交,如果相交则算出相交坐标,减去相交面积

*/

class Solution {
    public int computeArea(int A, int B, int C, int D, int E, int F, int G, int H) {
        int area1 = (C - A)*(D - B);
        int area2 = (G - E)*(H - F);
        if(E >= C || F >= D || B >= H || A >= G){
            return area1 + area2;
        }
        int BottomY = Math.max(B, F);
        int TopY = Math.min(D, H);
        int leftBottomX = Math.max(A, E);
        int rightBottomX = Math.min(C, G);
        return area1 + area2 - (TopY - BottomY)*(rightBottomX - leftBottomX);
    }
}
