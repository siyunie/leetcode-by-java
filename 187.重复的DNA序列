/*
所有 DNA 都由一系列缩写为 A，C，G 和 T 的核苷酸组成，例如：“ACGAATTCCG”。在研究 DNA 时，识别 DNA 中的重复序列有时会对研究非常有帮助。

编写一个函数来查找 DNA 分子中所有出现超过一次的 10 个字母长的序列（子串）。

 

示例：

输入：s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT"
输出：["AAAAACCCCC", "CCCCCAAAAA"]

*/

/*
方法一:暴力+hashmap
一开始考虑暴力破解双层循环加set存储结果,答案超时
于是考虑暴力遍历一遍,把所有结果存在hashmap里,如果有重复的就添加到结果中

*/

class Solution {
    public List<String> findRepeatedDnaSequences(String s) {
        List<String> res = new ArrayList<>();
        if(s.length() <= 10){
            return res;
        }
        Map<String, Integer> map = new HashMap<>();
        
        for(int i = 0; i <= s.length() - 10; i++){
            String tmp = s.substring(i, i + 10);
            if(map.containsKey(tmp) && map.get(tmp) == 1){
                res.add(tmp);
            }
            map.put(tmp, map.getOrDefault(tmp, 0)+1);
        }
        return res;
    }
}
