/*
假设有打乱顺序的一群人站成一个队列。 每个人由一个整数对(h, k)表示，其中h是这个人的身高，k是排在这个人前面且身高大于或等于h的人数。 编写一个算法来重建这个队列。

注意：
总人数少于1100人。

示例

输入:
[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]

输出:
[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]

*/

/*
方法一:
先排序后插入
先按身高从高到矮排序,如果身高相同,则按k从小到大排序
然后依次按k为索引插入,因为身高高的先插入,所以后面插入的身高矮的一定不会影响身高高的k值
*/

class Solution {
    public int[][] reconstructQueue(int[][] people) {
        Arrays.sort(people, (n1, n2)->n1[0] == n2[0] ? n1[1] - n2[1]:n2[0] - n1[0]);
        List<int[]> list = new LinkedList<>();
        for(int[] arr:people){
            list.add(arr[1], arr);
        }
        int[][] temp = new int[people.length][2];
        return list.toArray(temp);
    }
}
